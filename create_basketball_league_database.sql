
--------------------------------------------            USERS               ---------------------------------------------------------
/*
CREATE USER c##raz IDENTIFIED BY raz;
GRANT DBA,CONNECT, RESOURCE TO c##raz;
GRANT CREATE ANY TABLE,CREATE ANY VIEW, CREATE ANY PROCEDURE, CREATE ANY TRIGGER, CREATE ANY SEQUENCE TO c##raz WITH ADMIN OPTION;

*/
CONNECT c##raz/raz;


/*
CREATE USER c##my_user IDENTIFIED BY my_user;

GRANT DBA,CONNECT, RESOURCE TO c##my_user;
GRANT CREATE ANY TABLE,CREATE ANY VIEW, CREATE ANY PROCEDURE, CREATE ANY TRIGGER, CREATE ANY SEQUENCE TO c##my_user WITH ADMIN OPTION;
REVOKE CREATE ANY TABLE,CREATE ANY VIEW, CREATE ANY PROCEDURE, CREATE ANY TRIGGER, CREATE ANY SEQUENCE FROM c##my_userWITH  ;
REVOKE DBA,CONNECT, RESOURCE FROM c##my_user;
REVOKE INSERT  ANY TABLE  FROM c##my_user ;
GRANT CONNECT TO c##my_user;
GRANT SELECT ANY TABLE TO c##my_user;
CONNECT c##my_user/my_user;
*/

--------------------------------------------            DROP DB               ---------------------------------------------------------
DROP VIEW GAMES_BOARD_VIEW;
DROP VIEW LEAGUES_AND_TEAMS_WITH_WINS_AND_LOSSES_VIEW;
DROP VIEW TEAMS_LIST_VIEW;
DROP VIEW PLAYERS_LIST_VIEW;

DROP TRIGGER TRIG_NEW_PLAYER;
DROP TRIGGER TRIG_NEW_ARENA;
DROP TRIGGER TRIG_NEW_TEAM;
DROP TRIGGER TRIG_UPDATE_SALARY;

DROP PACKAGE league_pack;

DROP TABLE GAMES;
DROP TABLE ROUNDS;
DROP TABLE TEAM_IN_LEAGUE;
DROP TABLE LEAGUES;
DROP TABLE PLAYERS;
DROP TABLE OWNERS;
DROP TABLE TEAMS;
DROP TABLE ARENAS;

DROP SEQUENCE PLAYERS_SEQ;
DROP SEQUENCE LEAGUES_SEQ;
DROP SEQUENCE TEAMS_SEQ;
DROP SEQUENCE ARENAS_SEQ;
DROP SEQUENCE OWNERS_SEQ;
DROP SEQUENCE ROUNDS_SEQ;


--------------------------------------------            SEQUENCES               ---------------------------------------------------------
/* Create Sequences  */

CREATE SEQUENCE PLAYERS_SEQ
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE LEAGUES_SEQ
INCREMENT BY 100
START WITH 100;

CREATE SEQUENCE TEAMS_SEQ
INCREMENT BY 10
START WITH 10;

CREATE SEQUENCE ARENAS_SEQ
INCREMENT BY 10
START WITH 100;

CREATE SEQUENCE OWNERS_SEQ
INCREMENT BY 1
START WITH 1000;

CREATE SEQUENCE ROUNDS_SEQ
INCREMENT BY 1
START WITH 1;

--------------------------------------------            TABLES               ---------------------------------------------------------

/* Arenas table */

CREATE TABLE ARENAS(
    ARENA_ID NUMBER NOT NULL UNIQUE ,
    ARENA_NAME VARCHAR2(40),
    CITY VARCHAR2(20),
    NUMBER_OF_SEATS NUMBER
);

/* Teams table */

CREATE TABLE TEAMS(
    TEAM_ID NUMBER NOT NULL UNIQUE ,
    TEAM_NAME VARCHAR2(40),
    ARENA_ID NUMBER NOT NULL  REFERENCES ARENAS(ARENA_ID)
);

/* Players table */

CREATE TABLE PLAYERS(
    PLAYER_ID NUMBER NOT NULL UNIQUE ,
    FIRST_NAME VARCHAR2(20),
    LAST_NAME VARCHAR2(20),
    TEAM_ID NUMBER NOT NULL  REFERENCES TEAMS(TEAM_ID),
    JOIN_DATE DATE,
    JERSEY_NUMBER NUMBER ,
    SALARY NUMBER,
    POSITION_IN_COURT VARCHAR2(2)
);

/* Owners table  */

CREATE TABLE OWNERS(
    OWNER_ID NUMBER NOT NULL UNIQUE ,
    OWNER_NAME VARCHAR2(30),
    TEAM_ID NUMBER NOT NULL  REFERENCES TEAMS(TEAM_ID)
);

/* Leagues table  */

CREATE TABLE LEAGUES(
    LEAGUE_ID NUMBER NOT NULL UNIQUE ,
    LEAGUE_NAME VARCHAR2(30)
);

/* Team_in_league table */

CREATE TABLE TEAM_IN_LEAGUE(
    TEAM_ID NUMBER NOT NULL  REFERENCES TEAMS(TEAM_ID),
    LEAGUE_ID NUMBER NOT NULL  REFERENCES LEAGUES(LEAGUE_ID),
    NUMBER_OF_WINS NUMBER,
    NUMBER_OF_LOSSES NUMBER 
);

/*  Rounds  Table*/

CREATE TABLE ROUNDS(
    ROUND_ID NUMBER NOT NULL UNIQUE ,
    LEAGUE_ID NUMBER NOT NULL  REFERENCES LEAGUES(LEAGUE_ID),
    ROUND_DATE DATE
);

/* Games Table  */
CREATE TABLE GAMES(
    GAME_ROUND_ID NUMBER NOT NULL  ,
    HOME_TEAM_ID NUMBER NOT NULL  ,
    AWAY_TEAM_ID NUMBER NOT NULL  ,
    HOME_TEAM_SCORE NUMBER,
    AWAY_TEAM_SCORE NUMBER,
    
    CONSTRAINT FK_GAME_ROUND_ID FOREIGN KEY (GAME_ROUND_ID) REFERENCES ROUNDS(ROUND_ID),
    CONSTRAINT FK_HOME_TEAM_ID FOREIGN KEY (HOME_TEAM_ID) REFERENCES TEAMS(TEAM_ID),
    CONSTRAINT FK_AWAY_TEAM_ID FOREIGN KEY (AWAY_TEAM_ID) REFERENCES TEAMS(TEAM_ID),
    
    CONSTRAINT PK_GAMES PRIMARY KEY (GAME_ROUND_ID, HOME_TEAM_ID, AWAY_TEAM_ID)
);
    

--------------------------------------------            DATA               ---------------------------------------------------------

/* Arenas data  */

INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(0,'No Arena',NULL,NULL);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Yad Eliyaho','Tel Aviv',10000);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Pais Arena','Jerusalem',11600);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'	Universal Sports Hall CSKA','Moscow',5500);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Toto Hall','Holon',5600);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Mytishchi Arena ','Moscow',7280);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Basket-Hall Krasnodar ','Krasnodar',7500);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Sinan Erdem Dome','Istanbul',16000);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Siemens Arena','Vilnius',11000);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Sportovn? Centrum','Nymburk',2000);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Romema Arena','Haifa',5000);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Nir Haemak Hall','Afula',1000);
INSERT  INTO ARENAS(ARENA_ID, ARENA_NAME, CITY,NUMBER_OF_SEATS) VALUES(ARENAS_SEQ.NEXTVAL,'Ramaz Hall','Kiryat Ata',1000);



/*  Teams data*/

INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'Maccabi Tel Aviv',100);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'Hapoel Jerusalem',110);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'CSKA Moscow',120);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'Hapoel Holon',130);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'BC Khimki Moscow',140);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'PBC Lokomotiv Kuban',150);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'Galatasaray S.K.',160);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'BC Rytas',170);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'CEZ Nymburk',180);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'Maccabi Haifa',190);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'Hapoel Haifa',190);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'Hapoel Afula',200);
INSERT  INTO TEAMS(TEAM_ID, TEAM_NAME, ARENA_ID) VALUES(TEAMS_SEQ.NEXTVAL,'Ironi Kiryat Ata',210);


/* Players data*/

INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Scottie','Wilbekin',10,TO_DATE('10/07/2018','DD/MM/YYYY'),1,2000000,'PG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Yovel','Zoosman',10,TO_DATE('27/07/2017','DD/MM/YYYY'),50,500000,'SF');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Tamir','Blatt',20,TO_DATE('04/07/2018','DD/MM/YYYY'),6,500000,'PG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'James','Feldeine',20,TO_DATE('11/08/2018','DD/MM/YYYY'),14,1000000,'SG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Sergio','Rodr?guez',30,TO_DATE('17/07/2017','DD/MM/YYYY'),13,5000000,'PG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Guy','Pnini',40,TO_DATE('03/07/2017','DD/MM/YYYY'),10,500000,'SF');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'DeQuan','Jones',40,TO_DATE('31/07/2018','DD/MM/YYYY'),7,5000000,'PF');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Alexey','Shved',50,TO_DATE('16/07/2015','DD/MM/YYYY'),1,25000000,'PG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Malcolm','Thomas',50,TO_DATE('20/07/2017','DD/MM/YYYY'),23,500000,'C');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Jamel','McLean',60,TO_DATE('12/07/2017','DD/MM/YYYY'),1,750000,'C');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Vitaly','Fridzon',60,TO_DATE('25/07/2018','DD/MM/YYYY'),7,750000,'SG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Ege','Arar',70,TO_DATE('10/06/2014','DD/MM/YYYY'),11,750000,'PF');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Nigel','Hayes',70,TO_DATE('29/08/2018','DD/MM/YYYY'),7,500000,'PF');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Martynas','Echodas',80,TO_DATE('23/02/2018','DD/MM/YYYY'),14,500000,'PF');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Chris','Kramer',80,TO_DATE('20/07/2017','DD/MM/YYYY'),3,1000000,'PG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Eugene','Lawrence',90,TO_DATE('20/09/2016','DD/MM/YYYY'),10,500000,'PG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Bracey','Wright',90,TO_DATE('04/07/2017','DD/MM/YYYY'),5,800000,'SG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Daniel','Koperberg',100,TO_DATE('01/09/2018','DD/MM/YYYY'),8,100000,'C');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Guy','Lavie',100,TO_DATE('04/07/2018','DD/MM/YYYY'),10,100000,'PG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Jeff','Allen',110,TO_DATE('21/10/2018','DD/MM/YYYY'),13,50000,'PF');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Tony','Younger',110,TO_DATE('04/07/2018','DD/MM/YYYY'),11,50000,'SF');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Kahiem','Seawright',120,TO_DATE('08/08/2018','DD/MM/YYYY'),4,10000,'C');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Ron','Guberman',120,TO_DATE('04/07/2018','DD/MM/YYYY'),21,10000,'SG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Denzel','Livingston',130,TO_DATE('01/08/2018','DD/MM/YYYY'),11,10000,'PG');
INSERT   INTO PLAYERS(PLAYER_ID, FIRST_NAME, LAST_NAME,TEAM_ID,JOIN_DATE, JERSEY_NUMBER, SALARY, POSITION_IN_COURT) VALUES(PLAYERS_SEQ.NEXTVAL,'Amit','Ben-Yosef',130,TO_DATE('22/05/2018','DD/MM/YYYY'),4,5000,'SG');
 
 
/*  Owners data*/

INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'David Federman',10);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Eyal Chomsky',20);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Andrey Vatutin',30);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Eitan Lanciano',40);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Dmitry Golubkov',50);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Andrey Vedischev',60);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Mustafa Cengiz',70);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Antanas Guoga',80);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Miroslav Jansta',90);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Jeff Rosen',100);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Yuval Rusman',110);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Yosi Malka',120);
INSERT  INTO OWNERS(OWNER_ID, OWNER_NAME, TEAM_ID) VALUES(OWNERS_SEQ.NEXTVAL,'Sharon Avrahami',130);


/*  Leagues data*/

INSERT  INTO LEAGUES(LEAGUE_ID, LEAGUE_NAME) VALUES(lEAGUES_SEQ.NEXTVAL, 'Israeli Premier League');
INSERT  INTO LEAGUES(LEAGUE_ID, LEAGUE_NAME) VALUES(lEAGUES_SEQ.NEXTVAL, 'Euroleague');
INSERT  INTO LEAGUES(LEAGUE_ID, LEAGUE_NAME) VALUES(lEAGUES_SEQ.NEXTVAL, 'VTB United League');
INSERT  INTO LEAGUES(LEAGUE_ID, LEAGUE_NAME) VALUES(lEAGUES_SEQ.NEXTVAL, 'Basketball Champions League');
INSERT  INTO LEAGUES(LEAGUE_ID, LEAGUE_NAME) VALUES(lEAGUES_SEQ.NEXTVAL, 'EuroCup');
INSERT  INTO LEAGUES(LEAGUE_ID, LEAGUE_NAME) VALUES(lEAGUES_SEQ.NEXTVAL, 'Liga Leumit');



/*  Team In League data*/

INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(10, 100,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(10, 200,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(20, 100,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(20, 400,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(30, 200,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(30, 300,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(40, 100,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(40, 400,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(50, 200,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(50, 300,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(60, 300,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(60, 500,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(70, 500,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(80, 500,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(90, 400,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(100, 100,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(110, 600,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(120, 600,0,0);
INSERT INTO TEAM_IN_LEAGUE(TEAM_ID, LEAGUE_ID, NUMBER_OF_WINS, NUMBER_OF_LOSSES) VALUES(130, 600,0,0);


/*  Rounds data*/
INSERT  INTO ROUNDS(ROUND_ID, LEAGUE_ID, ROUND_DATE) VALUES(ROUNDS_SEQ.NEXTVAL,100,TO_DATE('06/10/2018','DD/MM/YYYY'));
INSERT  INTO ROUNDS(ROUND_ID, LEAGUE_ID, ROUND_DATE) VALUES(ROUNDS_SEQ.NEXTVAL,100,TO_DATE('13/10/2018','DD/MM/YYYY'));
INSERT  INTO ROUNDS(ROUND_ID, LEAGUE_ID, ROUND_DATE) VALUES(ROUNDS_SEQ.NEXTVAL,100,TO_DATE('20/10/2018','DD/MM/YYYY'));

/*  Games data*/
INSERT  INTO GAMES(GAME_ROUND_ID,HOME_TEAM_ID, AWAY_TEAM_ID,HOME_TEAM_SCORE,AWAY_TEAM_SCORE) VALUES(1,10,20,98,74);
INSERT  INTO GAMES(GAME_ROUND_ID,HOME_TEAM_ID, AWAY_TEAM_ID,HOME_TEAM_SCORE,AWAY_TEAM_SCORE) VALUES(1,40,100,68,45);
INSERT  INTO GAMES(GAME_ROUND_ID,HOME_TEAM_ID, AWAY_TEAM_ID,HOME_TEAM_SCORE,AWAY_TEAM_SCORE) VALUES(2,10,40,99,67);
INSERT  INTO GAMES(GAME_ROUND_ID,HOME_TEAM_ID, AWAY_TEAM_ID,HOME_TEAM_SCORE,AWAY_TEAM_SCORE) VALUES(2,100,20,70,69);
INSERT  INTO GAMES(GAME_ROUND_ID,HOME_TEAM_ID, AWAY_TEAM_ID,HOME_TEAM_SCORE,AWAY_TEAM_SCORE) VALUES(3,100,10,58,72);
INSERT  INTO GAMES(GAME_ROUND_ID,HOME_TEAM_ID, AWAY_TEAM_ID,HOME_TEAM_SCORE,AWAY_TEAM_SCORE) VALUES(3,20,40,68,55);

--------------------------------------------            VIEWS               ---------------------------------------------------------

--View of leagues names, dates, teams and scores
CREATE OR REPLACE VIEW GAMES_BOARD_VIEW
AS
SELECT L.LEAGUE_NAME AS LEAGUE, R.ROUND_DATE,T1.TEAM_NAME AS HOME_TEAM, T2.TEAM_NAME AS AWAY_TEAM,g.home_team_score, g.away_team_score
FROM GAMES G, ROUNDS R, TEAMS T1,TEAMS T2,LEAGUES L
where g.game_round_id = r.round_id and t1.team_id = g.home_team_id and t2.team_id = g.away_team_id AND l.league_id = r.league_id
ORDER BY r.round_date;

--View of leagues and teams name with number of wins and losses
CREATE OR REPLACE VIEW LEAGUES_AND_TEAMS_WITH_WINS_AND_LOSSES_VIEW
AS
select t.team_name, l.league_name, til.number_of_wins, til.number_of_losses
from team_in_league til, teams t, leagues l
where til.team_id = t.team_id and til.league_id = l.league_id;

--players list view
CREATE OR REPLACE VIEW PLAYERS_LIST_VIEW
AS
SELECT p.PLAYER_ID,p.first_name,p.last_name,t.team_name,p.join_date,p.jersey_number,p.salary,p.position_in_court
FROM PLAYERS p,TEAMS t
where p.TEAM_ID = t.TEAM_ID;

-- teams list view
CREATE OR REPLACE VIEW TEAMS_LIST_VIEW
AS
SELECT t.team_id,t.team_name,a.arena_name
FROM TEAMS t, ARENAS a
where a.arena_id = t.arena_id;


--------------------------------------------            TRIGGERS               ---------------------------------------------------------
/

--trigger before insert to players
CREATE OR REPLACE TRIGGER TRIG_NEW_PLAYER
BEFORE INSERT ON PLAYERS
FOR EACH ROW
DECLARE
    v_pid PLAYERS.PLAYER_ID%TYPE;
 BEGIN
    SELECT PLAYERS_SEQ.NEXTVAL INTO v_pid FROM DUAL;
    :NEW.PLAYER_ID := v_pid;
 END TRIG_NEW_PLAYER;
 
/

--trigger before insert to ARENAS
CREATE OR REPLACE TRIGGER TRIG_NEW_ARENA
BEFORE INSERT ON ARENAS
FOR EACH ROW
DECLARE
    v_aid ARENAS.ARENA_ID%TYPE;
 BEGIN
    SELECT ARENAS_SEQ.NEXTVAL INTO v_aid FROM DUAL;
    :NEW.ARENA_ID := v_aid;
 END TRIG_NEW_ARENA;
 
 /
 
 
 --trigger before insert to TEAMS
CREATE OR REPLACE TRIGGER TRIG_NEW_TEAM
BEFORE INSERT ON TEAMS
FOR EACH ROW
DECLARE
    v_tid TEAMS.TEAM_ID%TYPE;
 BEGIN
    SELECT TEAMS_SEQ.NEXTVAL INTO v_tid FROM DUAL;
    :NEW.TEAM_ID := v_tid;
 END TRIG_NEW_TEAM;
 

/

 --trigger insted update to sal
CREATE OR REPLACE TRIGGER TRIG_UPDATE_SALARY 
BEFORE UPDATE ON players
FOR EACH ROW
 BEGIN
    :NEW.SALARY := :OLD.SALARY + :OLD.SALARY * 0.1;
 END TRIG_UPDATE_SALARY;
 

/

--------------------------------------------            PACKAGE               ---------------------------------------------------------
create or replace PACKAGE league_pack AS

FUNCTION players_refcursor_function (p_choose VARCHAR2)   RETURN SYS_REFCURSOR;
FUNCTION teams_refcursor_function (p_order_by VARCHAR2, p_column_name VARCHAR2)   RETURN SYS_REFCURSOR;
FUNCTION get_leagues_names_function   RETURN SYS_REFCURSOR;
FUNCTION get_arenas_names_function   RETURN SYS_REFCURSOR;
FUNCTION get_league_table_function (p_league_name TEAMS.TEAM_NAME%TYPE)   RETURN SYS_REFCURSOR;
FUNCTION get_teams_names_function   RETURN SYS_REFCURSOR;
FUNCTION get_game_list_function (p_league_name TEAMS.TEAM_NAME%TYPE)   RETURN SYS_REFCURSOR;
FUNCTION arenas_refcursor_function   RETURN SYS_REFCURSOR;
FUNCTION get_rounds_dates_in_league_function (p_league_name LEAGUES.LEAGUE_NAME%TYPE)   RETURN SYS_REFCURSOR;
FUNCTION get_teams_names_in_league_function (p_league_name LEAGUES.LEAGUE_NAME%TYPE)   RETURN SYS_REFCURSOR;
FUNCTION return_sum_of_all_salaries RETURN NUMBER;
FUNCTION get_number_of_teams_in_league (p_league_name LEAGUES.LEAGUE_NAME%TYPE) RETURN NUMBER;

PROCEDURE UPDATE_WINS_AND_LOSSES_TO_TEAM_IN_LEAGUE (p_team_id TEAMS.TEAM_ID%TYPE, p_league_id LEAGUES.LEAGUE_ID%TYPE);
PROCEDURE UPDATE_WINS_AND_LOSSES_TO_ALL_TEAMS_IN_ALL_LEAGUES;
PROCEDURE add_new_player (p_first_name PLAYERS.FIRST_NAME%TYPE, p_last_name PLAYERS.LAST_NAME%TYPE, p_team_name  TEAMS.TEAM_NAME%TYPE, p_join_date PLAYERS.FIRST_NAME%TYPE,
           p_jersey_number PLAYERS.JERSEY_NUMBER%TYPE, p_salary PLAYERS.SALARY%TYPE, p_position PLAYERS.POSITION_IN_COURT%TYPE );
PROCEDURE add_new_arena (p_arena_name ARENAS.ARENA_NAME%TYPE, p_city ARENAS.CITY%TYPE, p_num_of_seats  ARENAS.NUMBER_OF_SEATS%TYPE );
PROCEDURE add_new_team (p_team_name TEAMS.TEAM_NAME%TYPE, p_arena_name ARENAS.ARENA_NAME%TYPE );
PROCEDURE link_team_to_league (p_team_name TEAMS.TEAM_NAME%TYPE, p_league_name LEAGUES.LEAGUE_NAME%TYPE );
PROCEDURE add_new_round (p_league_name LEAGUES.LEAGUE_NAME%TYPE, p_date  LEAGUES.LEAGUE_NAME%TYPE );
PROCEDURE add_new_game (p_round_date LEAGUES.LEAGUE_NAME%TYPE,p_home_team_name TEAMS.TEAM_NAME%TYPE , p_home_team_score GAMES.HOME_TEAM_SCORE%TYPE,
            p_away_team_name TEAMS.TEAM_NAME%TYPE , p_away_team_score GAMES.AWAY_TEAM_SCORE%TYPE);
PROCEDURE upgrade_players_sal;

END league_pack;

/

create or replace PACKAGE BODY league_pack AS


--------------------------------------------            FUNCTIONS               ---------------------------------------------------------
 FUNCTION players_refcursor_function
(p_choose VARCHAR2)
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
BEGIN
    IF p_choose = 'All' THEN OPEN c FOR SELECT * FROM players_list_view;
    ELSE OPEN c FOR SELECT * FROM players_list_view WHERE position_in_court = p_choose;
    END IF;
  RETURN c;
END players_refcursor_function;

 FUNCTION teams_refcursor_function
(p_order_by VARCHAR2, p_column_name VARCHAR2)
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
BEGIN
    IF p_order_by = 'desc' AND p_column_name = 'TEAM_NAME'  THEN
        OPEN c FOR SELECT * FROM teams_list_view ORDER BY TEAM_NAME  DESC;
    ELSIF p_order_by = 'asc' AND p_column_name = 'TEAM_NAME'  THEN
        OPEN c FOR SELECT * FROM teams_list_view ORDER BY TEAM_NAME  ASC;
    ELSIF p_order_by = 'desc' AND p_column_name = 'ARENA_NAME'  THEN
        OPEN c FOR SELECT * FROM teams_list_view ORDER BY ARENA_NAME  DESC;
    ELSE 
        OPEN c FOR SELECT * FROM teams_list_view ORDER BY ARENA_NAME  ASC;
    END IF;
  RETURN c;
END teams_refcursor_function;

 FUNCTION get_leagues_names_function
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
BEGIN
  OPEN c FOR SELECT league_name FROM leagues;
  RETURN c;
END get_leagues_names_function;


 FUNCTION get_arenas_names_function
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
BEGIN
  OPEN c FOR SELECT arena_name FROM ARENAS;
  RETURN c;
END get_arenas_names_function;

 FUNCTION get_league_table_function
(p_league_name TEAMS.TEAM_NAME%TYPE)
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
BEGIN
  OPEN c FOR 
                    SELECT team_name, number_of_wins, number_of_losses
                        FROM LEAGUES_AND_TEAMS_WITH_WINS_AND_LOSSES_VIEW
                        WHERE league_name = p_league_name
                        ORDER BY number_of_wins desc;
  RETURN c;
END get_league_table_function;

 FUNCTION get_teams_names_function
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
BEGIN
  OPEN c FOR SELECT team_name FROM teams;
  RETURN c;
END get_teams_names_function;

 FUNCTION get_game_list_function
(p_league_name TEAMS.TEAM_NAME%TYPE)
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
BEGIN
  OPEN c FOR 
                    SELECT ROUND_DATE, HOME_TEAM, AWAY_TEAM, HOME_TEAM_SCORE, AWAY_TEAM_SCORE
                        FROM GAMES_BOARD_VIEW
                        WHERE league = p_league_name;
  RETURN c;
END get_game_list_function;

--get all arenas cursor
 FUNCTION arenas_refcursor_function
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
BEGIN
     OPEN c FOR SELECT * FROM ARENAS;
  RETURN c;
END arenas_refcursor_function;

-- get rounds date by league
 FUNCTION get_rounds_dates_in_league_function
(p_league_name LEAGUES.LEAGUE_NAME%TYPE)
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
  v_league_id LEAGUES.LEAGUE_ID%TYPE;
BEGIN
  OPEN c FOR SELECT ROUND_DATE FROM ROUNDS WHERE LEAGUE_ID = (SELECT LEAGUE_ID  FROM LEAGUES WHERE p_league_name = LEAGUE_NAME);
  RETURN c;
END get_rounds_dates_in_league_function;


-- get teams names by league
 FUNCTION get_teams_names_in_league_function
(p_league_name LEAGUES.LEAGUE_NAME%TYPE)
  RETURN SYS_REFCURSOR
AS
  c SYS_REFCURSOR;
  v_league_id LEAGUES.LEAGUE_ID%TYPE;
BEGIN
  OPEN c FOR SELECT t.team_name FROM teams t,team_in_league til where til.LEAGUE_ID = (SELECT LEAGUE_ID  FROM LEAGUES 
                WHERE p_league_name = LEAGUE_NAME) AND til.TEAM_ID = t.TEAM_ID ;
  RETURN c;
END get_teams_names_in_league_function;

FUNCTION return_sum_of_all_salaries 
RETURN NUMBER
AS
v_sum_of_sals NUMBER;
BEGIN
select sum(team_avg_sal)  into v_sum_of_sals
from (select team_avg_sal from (
                                                                select  first_name,last_name,team_name,salary,avg(salary) over (partition by team_name) team_avg_sal 
                                                                                    from players_list_view ));
RETURN v_sum_of_sals;
END return_sum_of_all_salaries;

FUNCTION get_number_of_teams_in_league
(p_league_name LEAGUES.LEAGUE_NAME%TYPE)
RETURN NUMBER
AS
v_num_of_teams NUMBER;
BEGIN
    SELECT num_of_teams INTO v_num_of_teams FROM 
                                (select league_name,count(*) num_of_teams from leagues_and_teams_with_wins_and_losses_view   group by league_name)
                                where league_name = p_league_name ;
RETURN v_num_of_teams;
END;

--------------------------------------------            PROCEDURES               ---------------------------------------------------------

-- Update wins and losses to specific team in league
 PROCEDURE UPDATE_WINS_AND_LOSSES_TO_TEAM_IN_LEAGUE
(p_team_id TEAMS.TEAM_ID%TYPE, p_league_id LEAGUES.LEAGUE_ID%TYPE)
IS
v_team_name TEAMS.TEAM_NAME%TYPE;
v_league_name LEAGUES.LEAGUE_NAME%TYPE;
v_number_of_wins TEAM_IN_LEAGUE.NUMBER_OF_WINS%TYPE;
v_number_of_losses TEAM_IN_LEAGUE.NUMBER_OF_LOSSES%TYPE;
BEGIN
    SELECT TEAM_NAME INTO v_team_name  FROM TEAMS WHERE TEAM_ID = p_team_id;
    SELECT LEAGUE_NAME INTO v_league_name  FROM LEAGUES WHERE LEAGUE_ID = p_league_id;

    SELECT COUNT(*) INTO v_number_of_wins
    FROM GAMES_BOARD_VIEW
    WHERE ((HOME_TEAM = v_team_name AND HOME_TEAM_SCORE > AWAY_TEAM_SCORE) 
    OR (AWAY_TEAM = v_team_name AND HOME_TEAM_SCORE < AWAY_TEAM_SCORE))
    AND LEAGUE = v_league_name;

    SELECT COUNT(*) INTO v_number_of_losses
    FROM GAMES_BOARD_VIEW
    WHERE ((HOME_TEAM = v_team_name AND HOME_TEAM_SCORE < AWAY_TEAM_SCORE) 
    OR (AWAY_TEAM = v_team_name AND HOME_TEAM_SCORE > AWAY_TEAM_SCORE))
    AND LEAGUE = v_league_name;

    UPDATE TEAM_IN_LEAGUE 
    SET TEAM_ID = p_team_id, LEAGUE_ID = p_league_id, NUMBER_OF_WINS = v_number_of_wins, NUMBER_OF_LOSSES = v_number_of_losses
    WHERE TEAM_ID = p_team_id AND LEAGUE_ID = p_league_id ;

END UPDATE_WINS_AND_LOSSES_TO_TEAM_IN_LEAGUE;

-- Update wins and losses to all teams in all leagues
 PROCEDURE UPDATE_WINS_AND_LOSSES_TO_ALL_TEAMS_IN_ALL_LEAGUES
IS
CURSOR league_id_cursor IS SELECT league_id FROM leagues;
v_l_id LEAGUES.LEAGUE_ID%TYPE;
v_team_id TEAMS.TEAM_ID%TYPE;
 c SYS_REFCURSOR;
BEGIN
OPEN league_id_cursor;
FETCH league_id_cursor INTO v_l_id;
WHILE league_id_cursor%FOUND
LOOP  
    OPEN c FOR SELECT team_id FROM TEAM_IN_LEAGUE WHERE league_id = v_l_id;
    FETCH c INTO v_team_id;
    WHILE c%FOUND
    LOOP
        UPDATE_WINS_AND_LOSSES_TO_TEAM_IN_LEAGUE(v_team_id,v_l_id );
         FETCH c INTO v_team_id;
    END LOOP;
    FETCH league_id_cursor INTO v_l_id;
END LOOP;
CLOSE league_id_cursor;
END UPDATE_WINS_AND_LOSSES_TO_ALL_TEAMS_IN_ALL_LEAGUES;



-- add player
 PROCEDURE add_new_player
(p_first_name PLAYERS.FIRST_NAME%TYPE, p_last_name PLAYERS.LAST_NAME%TYPE, p_team_name  TEAMS.TEAM_NAME%TYPE, p_join_date PLAYERS.FIRST_NAME%TYPE,
           p_jersey_number PLAYERS.JERSEY_NUMBER%TYPE, p_salary PLAYERS.SALARY%TYPE, p_position PLAYERS.POSITION_IN_COURT%TYPE )
IS
v_team_id TEAMS.TEAM_ID%TYPE;
BEGIN
    select TEAM_ID INTO v_team_id FROM TEAMS WHERE p_team_name = TEAM_NAME;
    INSERT INTO PLAYERS(FIRST_NAME, LAST_NAME, TEAM_ID, JOIN_DATE, JERSEY_NUMBER, SALARY,POSITION_IN_COURT) VALUES (p_first_name, p_last_name,v_team_id, TO_DATE(p_join_date, 'DD/MM/YYYY'), p_jersey_number, p_salary,p_position);
END add_new_player;

-- add arena
 PROCEDURE add_new_arena
(p_arena_name ARENAS.ARENA_NAME%TYPE, p_city ARENAS.CITY%TYPE, p_num_of_seats  ARENAS.NUMBER_OF_SEATS%TYPE )
IS
BEGIN
    INSERT INTO ARENAS(ARENA_NAME, CITY, NUMBER_OF_SEATS) VALUES (p_arena_name, p_city,p_num_of_seats);
END add_new_arena;

-- add TEAM
 PROCEDURE add_new_team
(p_team_name TEAMS.TEAM_NAME%TYPE, p_arena_name ARENAS.ARENA_NAME%TYPE )
IS
    v_arena_id ARENAS.ARENA_ID%TYPE;
BEGIN
    SELECT ARENA_ID INTO v_arena_id FROM ARENAS WHERE p_arena_name = ARENA_NAME;
    INSERT INTO TEAMS(TEAM_NAME, ARENA_ID) VALUES (p_team_name, v_arena_id);
END add_new_team;

-- link team to league
 PROCEDURE link_team_to_league
(p_team_name TEAMS.TEAM_NAME%TYPE, p_league_name LEAGUES.LEAGUE_NAME%TYPE )
IS
    v_team_id TEAMS.TEAM_ID%TYPE;
    v_league_id LEAGUES.LEAGUE_ID%TYPE;
BEGIN
    SELECT TEAM_ID INTO v_team_id FROM TEAMS WHERE p_team_name = TEAM_NAME;
    SELECT LEAGUE_ID INTO v_league_id FROM LEAGUES WHERE p_league_name = LEAGUE_NAME;
    INSERT INTO TEAM_IN_LEAGUE  VALUES (v_team_id, v_league_id,0,0);
END link_team_to_league;


-- add round
 PROCEDURE add_new_round
(p_league_name LEAGUES.LEAGUE_NAME%TYPE, p_date  LEAGUES.LEAGUE_NAME%TYPE )
IS
    v_league_id LEAGUES.LEAGUE_ID%TYPE;
BEGIN
    SELECT LEAGUE_ID INTO v_league_id FROM LEAGUES WHERE p_league_name = LEAGUE_NAME;
    INSERT INTO ROUNDS(ROUND_ID, LEAGUE_ID, ROUND_DATE) VALUES (ROUNDS_SEQ.NEXTVAL, v_league_id, TO_DATE(p_date, 'DD/MM/YYYY'));
END add_new_round;

-- add game
 PROCEDURE add_new_game
(p_round_date LEAGUES.LEAGUE_NAME%TYPE,p_home_team_name TEAMS.TEAM_NAME%TYPE , p_home_team_score GAMES.HOME_TEAM_SCORE%TYPE,
            p_away_team_name TEAMS.TEAM_NAME%TYPE , p_away_team_score GAMES.AWAY_TEAM_SCORE%TYPE)
IS
    v_round_id ROUNDS.ROUND_ID%TYPE;
    v_home_team_id GAMES.HOME_TEAM_ID%TYPE;
    v_away_team_id GAMES.AWAY_TEAM_ID%TYPE;
    same_team_error EXCEPTION;
    tie_error EXCEPTION;
BEGIN
    SELECT ROUND_ID INTO v_round_id FROM ROUNDS WHERE p_round_date = TO_CHAR(ROUND_DATE,'YYYY-MM-DD');
    SELECT TEAM_ID INTO v_home_team_id FROM TEAMS WHERE p_home_team_name = TEAM_NAME;
    SELECT TEAM_ID INTO v_away_team_id FROM TEAMS WHERE p_away_team_name = TEAM_NAME;
   IF v_home_team_id = v_away_team_id THEN RAISE same_team_error;
   ELSIF  p_home_team_score = p_away_team_score THEN RAISE tie_error;
   ELSE
   INSERT INTO GAMES VALUES (v_round_id, v_home_team_id,v_away_team_id, p_home_team_score,  p_away_team_score);
   END IF;

   EXCEPTION
   WHEN same_team_error THEN raise_application_error (-20001,'You have selected the same team to home and away.');
   WHEN tie_error THEN raise_application_error (-20002 ,'The game cant be ended in TIE.');
   WHEN OTHERS THEN raise_application_error (-20003,'An error has occurred.');

END add_new_game;

PROCEDURE upgrade_players_sal
IS
BEGIN
    UPDATE PLAYERS SET SALARY = SALARY;
END upgrade_players_sal;


END league_pack;


